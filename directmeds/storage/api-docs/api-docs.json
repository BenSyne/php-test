{
    "openapi": "3.0.0",
    "info": {
        "title": "Direct Meds Pharmacy API",
        "description": "HIPAA-compliant pharmacy management system API for Direct Meds. This API provides secure access to prescription management, product catalog, payment processing, and compliance features.",
        "contact": {
            "name": "Direct Meds API Support",
            "email": "api-support@directmeds.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/api",
            "description": "Direct Meds API Server"
        }
    ],
    "paths": {
        "/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user",
                "description": "Authenticate user credentials and receive API token",
                "operationId": "loginUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "device_name"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "SecurePassword123!"
                                    },
                                    "device_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Mobile App"
                                    },
                                    "two_factor_code": {
                                        "description": "Required if 2FA is enabled",
                                        "type": "string",
                                        "maxLength": 6,
                                        "example": "123456"
                                    },
                                    "recovery_code": {
                                        "description": "Use instead of 2FA code",
                                        "type": "string",
                                        "example": "recovery-code-123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "user_type": {
                                                    "type": "string",
                                                    "example": "patient"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "two_factor_enabled": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "hipaa_acknowledged_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|abc123def456ghi789..."
                                        },
                                        "abilities": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "*"
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The provided credentials are incorrect."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or 2FA required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Two-factor authentication code required"
                                        },
                                        "errors": {
                                            "properties": {
                                                "two_factor_code": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Two-factor authentication code is required"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "requires_2fa": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many login attempts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Too many login attempts. Please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register new user",
                "description": "Create a new user account and receive an API token",
                "operationId": "registerUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "user_type",
                                    "terms_accepted",
                                    "privacy_accepted"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255,
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "minLength": 8,
                                        "example": "SecurePassword123!"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "SecurePassword123!"
                                    },
                                    "user_type": {
                                        "type": "string",
                                        "enum": [
                                            "patient",
                                            "pharmacist",
                                            "prescriber"
                                        ],
                                        "example": "patient"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "pattern": "^[\\+]?[1-9][\\d]{0,15}$",
                                        "example": "+1234567890"
                                    },
                                    "date_of_birth": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-15"
                                    },
                                    "license_number": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "LIC123456"
                                    },
                                    "license_state": {
                                        "type": "string",
                                        "maxLength": 2,
                                        "example": "CA"
                                    },
                                    "license_expiry": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-12-31"
                                    },
                                    "dea_number": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "DEA123456"
                                    },
                                    "npi_number": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "1234567890"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Doe"
                                    },
                                    "address_line_1": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "123 Main St"
                                    },
                                    "city": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "San Francisco"
                                    },
                                    "state": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "California"
                                    },
                                    "postal_code": {
                                        "type": "string",
                                        "maxLength": 10,
                                        "example": "94102"
                                    },
                                    "terms_accepted": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "privacy_accepted": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "user_type": {
                                                    "type": "string",
                                                    "example": "patient"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|abc123def456ghi789..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Get authenticated user profile",
                "description": "Retrieve the authenticated user's profile information including permissions and roles",
                "operationId": "getUserProfile",
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "user_type": {
                                                    "type": "string",
                                                    "example": "patient"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "email_verified_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                },
                                                "hipaa_acknowledged_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "profile": {
                                                    "properties": {
                                                        "first_name": {
                                                            "type": "string",
                                                            "example": "John"
                                                        },
                                                        "last_name": {
                                                            "type": "string",
                                                            "example": "Doe"
                                                        },
                                                        "phone_mobile": {
                                                            "type": "string",
                                                            "example": "+1234567890"
                                                        },
                                                        "address_line_1": {
                                                            "type": "string",
                                                            "example": "123 Main St"
                                                        },
                                                        "city": {
                                                            "type": "string",
                                                            "example": "San Francisco"
                                                        },
                                                        "state": {
                                                            "type": "string",
                                                            "example": "CA"
                                                        },
                                                        "postal_code": {
                                                            "type": "string",
                                                            "example": "94102"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "permissions": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "view prescriptions",
                                                "upload prescriptions"
                                            ]
                                        },
                                        "roles": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "patient"
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/health": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Public health check",
                "description": "Check the API status and basic system information",
                "operationId": "healthCheck",
                "responses": {
                    "200": {
                        "description": "System is healthy",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "healthy"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "version": {
                                            "type": "string",
                                            "example": "1.0.0"
                                        },
                                        "service": {
                                            "type": "string",
                                            "example": "Direct Meds API"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "description": "Use Sanctum bearer token for authentication. Include the token in the Authorization header as 'Bearer {token}'.",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "User authentication and session management"
        },
        {
            "name": "User Profile",
            "description": "User profile and account management"
        },
        {
            "name": "System",
            "description": "System health and status endpoints"
        }
    ]
}