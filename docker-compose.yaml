version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./directmeds/storage:/var/www/html/storage
      - ./directmeds/public/uploads:/var/www/html/public/uploads
    environment:
      - SERVICE_NAME=app
      - SERVICE_TAGS=production
      # Pass through database environment variables
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      - redis
    labels:
      # Traefik labels for Coolify
      - "traefik.enable=true"
      - "traefik.http.routers.directmeds.rule=Host(`${APP_DOMAIN}`)"
      - "traefik.http.routers.directmeds.entrypoints=websecure"
      - "traefik.http.routers.directmeds.tls=true"
      - "traefik.http.routers.directmeds.tls.certresolver=letsencrypt"
      - "traefik.http.services.directmeds.loadbalancer.server.port=80"
      # Health check for Traefik
      - "traefik.http.services.directmeds.loadbalancer.healthcheck.path=/health"
      - "traefik.http.services.directmeds.loadbalancer.healthcheck.interval=30s"
      - "traefik.http.services.directmeds.loadbalancer.healthcheck.timeout=10s"

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  redis-data:
    driver: local